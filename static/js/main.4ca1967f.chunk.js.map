{"version":3,"sources":["UI/LoadingHandler.module.css","reducers/shoppingCartReducer.js","utils.js","actions/utils.js","actions/orderPlacementActions.js","api.js","pages/cart.js","actions/orderHistoryActions.js","pages/ordersHistory.js","actions/menuActions.js","UI/LoadingHandler.js","pages/menu.js","App.js","serviceWorker.js","reducers/utils.js","reducers/ordersHistoryReducer.js","reducers/menuReducer.js","reducers/orderPlacementReducer.js","reducers/index.js","sagas/orders.js","sagas/menu.js","sagas/index.js","index.js","istockphoto-938742222-1024x1024.jpg"],"names":["module","exports","DEFAULT_DELIVERY_PRICE","shoppingCartInitialState","items","totalQnty","totalPrice","usd","eur","deliveryPrice","addItemToShoppingCart","item","type","payload","removeItemFromShoppingCart","getElemIndexInArray","id","array","R","recalculateTotalOrder","totalPriceUsd","totalPriceEur","deliveryPriceUsd","deliveryPriceEur","i","length","qnty","price","toFixed","updateOrdersList","index","increase","action","newQnty","totalPriceByType","Number","updateShoppingCartState","total","rusPhoneNumberRegExp","RegExp","getLCValueByKey","key","JSON","parse","localStorage","getItem","e","console","error","renderPrice","data","createAsyncRequestTypes","base","REQUEST","SUCCESS","FAILURE","INITIAL","actionWithoutPayload","resetToInitialAction","ORDER_PLACEMENT_TYPES","ordersPlacementAction","response","errorMessage","api","Axios","create","baseURL","timeout","LOADING_STATUSES","Paragraph","Typography","Text","layout","labelCol","span","wrapperCol","disabledDate","current","moment","subtract","disabledDateTime","disabledHours","start","end","result","push","range","add","format","SHOPPING_CART_VIEWS","CartContainer","connect","state","shoppingCartItems","shoppingCartReducer","orderPlacementReducer","dispatch","addItemToCart","removeItemFromCart","resetCartToInitial","placeOrder","order","resetOrderToInitial","loadingStatus","useState","currentOrderView","setOrderView","useEffect","remove","shoppingCartEmpty","columns","title","dataIndex","render","text","record","size","onClick","dataSource","expanablde","summary","Summary","Row","Cell","style","width","margin","name","onFinish","v","orderInfo","Math","random","toString","substr","address","deliveryTime","toDate","clientName","phoneNumber","orderItems","Item","label","rules","required","message","validator","_","value","num","test","Promise","resolve","reject","disabledTime","showTime","loading","htmlType","status","extra","to","subTitle","className","strong","fontSize","ORDERS_HISTORY_TYPES","ordersHistoryAction","OrdersHistoryContainer","ordersHistoryReducer","getOrdersHistory","props","expandable","expandedRowRender","map","MENU_TYPES","menuAction","LoadingHandler","children","minHeight","styles","spinnerWrapper","spinner","Meta","Card","MenuContainer","menuReducer","getMenu","gutter","justify","pizza","xs","offset","lg","hoverable","cover","alt","src","img","ingredients","join","Header","Layout","AppContainer","isAuth","theme","mode","defaultSelectedKeys","count","exact","path","Boolean","window","location","hostname","match","createASyncReducer","initialState","request","log","rootReducer","combineReducers","updatedItems","elem","SAGAGetOrdersHistory","SAGAOrderPlacement","actionWatcherOrders","APIGetOrdersHistory","get","call","orderHistory","put","APIOrderPlacement","post","setOrderToHistory","prevHistoryParsed","setItem","stringify","setLCValueByKey","params","takeLatest","SAGAGetMenu","actionWatcherMenu","INGREDIENTS","generateIngredients","res","floor","pizzas","pizzaImg","APIGetMenu","rootSaga","all","fork","sagaMiddleware","createSagaMiddleware","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","configureStore","store","createStore","applyMiddleware","run","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.4ca1967f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinnerWrapper\":\"LoadingHandler_spinnerWrapper__r2_1a\",\"spinner\":\"LoadingHandler_spinner__2JaJ-\"};","import * as R from 'ramda'\nconst ADD_ITEM = 'ADD_ITEM';\nconst REMOVE_ITEM = 'REMOVE_ITEM';\nconst RESET_SHOPPING_CART = 'RESET_SHOPPING_CART';\n\nexport const USD_PRICE_FOR_FREE_DELIVERY = 20;\nconst DEFAULT_DELIVERY_PRICE = {\n    usd: 5,\n    eur: 6\n};\n\nconst shoppingCartInitialState = {\n    items: [],\n    totalQnty: 0,\n    totalPrice: {\n        usd: 0,\n        eur: 0\n    },\n    deliveryPrice: {\n        usd: 0,\n        eur: 0\n    }\n};\n\nexport const addItemToShoppingCart = (item) => {\n    return {\n        type: ADD_ITEM,\n        payload: item\n    }\n};\n\nexport const removeItemFromShoppingCart = (item) => {\n    return {\n        type: REMOVE_ITEM,\n        payload: item\n    }\n};\n\nexport const resetCartToInitial = () => {\n    return {\n        type: RESET_SHOPPING_CART,\n    }\n};\n\nconst NO_ITEM_IN_ARRAY_INDEX = -1;\n\nconst getElemIndexInArray = (id ,array) => R.findIndex(R.propEq('id', id))(array);\nconst recalculateTotalOrder = (items) => {\n    let totalQnty = 0;\n    let totalPriceUsd = 0;\n    let totalPriceEur = 0;\n    let deliveryPriceUsd = 0;\n    let deliveryPriceEur = 0;\n    for (let i = 0; i < items.length; i++) {\n        totalQnty += items[i].qnty;\n        totalPriceUsd += items[i].price.usd * items[i].qnty;\n        totalPriceEur += items[i].price.eur * items[i].qnty;\n    };\n\n    if (totalPriceUsd < USD_PRICE_FOR_FREE_DELIVERY) {\n        deliveryPriceUsd = DEFAULT_DELIVERY_PRICE.usd;\n        deliveryPriceEur = DEFAULT_DELIVERY_PRICE.eur;\n    }\n    return {\n        totalQnty,\n        totalPrice: {\n            usd: (totalPriceUsd + deliveryPriceUsd).toFixed(2),\n            eur: (totalPriceEur + deliveryPriceEur).toFixed(2)\n        },\n        deliveryPrice: {\n            usd: deliveryPriceUsd,\n            eur: deliveryPriceEur\n        }\n\n    }\n};\n\nconst INCREASE_BY_ONE = 1;\nconst DECREASE_BY_ONE = -1;\n\nconst updateOrdersList = (index, items, increase) => {\n    let action = increase ? INCREASE_BY_ONE : DECREASE_BY_ONE;\n    const newQnty = items[index].qnty + action\n    return R.update(index, {...items[index], qnty: newQnty, totalPriceByType: {\n        usd: Number(newQnty * items[index].price.usd).toFixed(2),\n        eur: Number(newQnty * items[index].price.eur).toFixed(2),\n        } }, items)\n};\n\nconst updateShoppingCartState = (items, total) => {\n    return {\n        items: items,\n        ...total\n    }\n};\n\nexport const shoppingCartReducer = (state = shoppingCartInitialState, action) => {\n    const index = getElemIndexInArray(R.path(['payload','id'], action), state.items);\n    switch (action.type) {\n        case ADD_ITEM:\n            if (index === NO_ITEM_IN_ARRAY_INDEX) {\n                const updatedItems = R.append({...action.payload,qnty: 1,  totalPriceByType: {\n                        usd: action.payload.price.usd,\n                        eur: action.payload.price.eur,\n                    }}, state.items);\n                const total = recalculateTotalOrder(updatedItems)\n                return updateShoppingCartState(updatedItems, total)\n            } else {\n                const updatedItems = updateOrdersList(index, state.items, true);\n                const total = recalculateTotalOrder(updatedItems)\n                return updateShoppingCartState(updatedItems, total)\n            }\n        case REMOVE_ITEM:\n            if (index === NO_ITEM_IN_ARRAY_INDEX) {\n                return state\n            } else {\n                if (state.items[index].qnty === 1) {\n                    const updatedItems = R.filter(elem => elem.id !== state.items[index].id, state.items);\n                    const total = recalculateTotalOrder(updatedItems);\n                    return updateShoppingCartState(updatedItems, total)\n                };\n                const updatedItems = updateOrdersList(index, state.items, false);\n                const total = recalculateTotalOrder(updatedItems);\n                return updateShoppingCartState(updatedItems, total)\n            }\n        case RESET_SHOPPING_CART:\n            return shoppingCartInitialState;\n        default:\n            return state\n    }\n}","import React from \"react\";\n\nexport const rusPhoneNumberRegExp = new RegExp('^(\\\\+7|7|8)?[\\\\s\\\\-]?\\\\(?[489][0-9]{2}\\\\)?[\\\\s\\\\-]?[0-9]{3}[\\\\s\\\\-]?[0-9]{2}[\\\\s\\\\-]?[0-9]{2}$')\n\nexport const getLCValueByKey = (key) => {\n    try {\n        return JSON.parse(localStorage.getItem(key));\n    } catch (e) {\n        console.error(`LocalStorage error happen while getting ${key}`, e)\n    }\n};\nexport const setLCValueByKey = (value, key) => {\n    try {\n        localStorage.setItem(key, JSON.stringify(value))\n    } catch (e) {\n        console.error(`LocalStorage error happen while setting ${key} with payload: ${value}`, e)\n    }\n};\n\nexport const renderOptionalFreePrice = (data, amountToGetFree) => {\n    return (\n        data.usd === 0 ? 'Free'\n            :  renderPrice(data)\n    )\n};\n\nexport const renderPrice = (data) => {\n    return (\n        <>\n            ${data.usd}; €{data.eur}\n        </>\n    )\n};\n\nexport const ORDER_HISTORY_LC_KEY = 'ORDER_HISTORY';\n","export const REQUEST = 'REQUEST';\nexport const SUCCESS = 'SUCCESS';\nexport const FAILURE = 'FAILURE';\nexport const INITIAL = 'INITIAL';\n\nexport function createAsyncRequestTypes(base) {\n    return {\n        REQUEST: `${base}_${REQUEST}`,\n        SUCCESS: `${base}_${SUCCESS}`,\n        FAILURE: `${base}_${FAILURE}`,\n        INITIAL: `${base}_${INITIAL}`,\n    }\n}\nexport function action(type, payload) {\n    return {type, payload}\n}\nexport function actionWithoutPayload(type) {\n    return {type}\n}\n\nexport function resetToInitialAction(type)  {\n    return {type}\n}","import {actionWithoutPayload, createAsyncRequestTypes, action, resetToInitialAction, FAILURE, INITIAL, REQUEST, SUCCESS} from \"./utils\";\n\nexport const ORDER_PLACEMENT_TYPES = createAsyncRequestTypes('ORDER_PLACEMENT');\n\nexport const ordersPlacementAction = {\n    request: (payload) => action(ORDER_PLACEMENT_TYPES[REQUEST], payload),\n    success: (response) => actionWithoutPayload(ORDER_PLACEMENT_TYPES[SUCCESS]),\n    failure: (errorMessage) => action(ORDER_PLACEMENT_TYPES[FAILURE], {errorMessage}),\n    initial: () => resetToInitialAction(ORDER_PLACEMENT_TYPES[INITIAL]),\n};","import Axios from 'axios';\nexport const api = Axios.create({\n    baseURL: 'https://jsonplaceholder.typicode.com',\n    timeout: 5000,\n});\n\nexport const LOADING_STATUSES = {\n    INITIAL: '* INITIAL *',\n    LOADING: '* LOADING *',\n    SUCCESS: '* SUCCESS *',\n    FAILURE: '* FAILURE *',\n};","import React, {useEffect, useState} from \"react\";\nimport {\n    addItemToShoppingCart,\n    removeItemFromShoppingCart, resetCartToInitial,\n    USD_PRICE_FOR_FREE_DELIVERY\n} from \"../reducers/shoppingCartReducer\";\nimport {connect} from \"react-redux\";\nimport * as moment from 'moment';\nimport * as R from \"ramda\";\nimport {Link} from \"react-router-dom\";\nimport {Button, Form, Input, Space, Table, DatePicker, Result, Typography} from \"antd\";\n\nimport {\n    rusPhoneNumberRegExp,\n    renderPrice,\n    renderOptionalFreePrice\n} from \"../utils\";\nimport {ordersPlacementAction} from \"../actions/orderPlacementActions\";\nimport {LOADING_STATUSES} from \"../api\";\nimport CloseCircleOutlined from \"@ant-design/icons/lib/icons/CloseCircleOutlined\";\nconst { Paragraph, Text } = Typography;\n\nconst columns = (add, remove) => [\n    {\n        title: 'Pizza',\n        dataIndex: 'name',\n    },\n    {\n        title: 'Price',\n        render: (text, record, index) => {\n            return renderPrice(record.price)\n        }\n    },\n    {\n        title: 'Quantity',\n        dataIndex: 'qnty',\n    },\n    {\n        title: 'Total',\n        render: (text, record, index) => {\n            return renderPrice(record.totalPriceByType)\n        }\n    },\n    {\n        title: '',\n        key: 'x',\n        render: (text, record) => (\n            <Space size=\"middle\">\n                <a onClick={() => add(record) }>Add</a>\n                <a onClick={() => remove(record) }>Remove</a>\n            </Space>\n        ),\n    },\n];\n\n\nconst formItemLayout = {\n    labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 },\n    },\n    wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n    },\n};\n\nconst tailLayout = {\n    wrapperCol: { offset: 8, span: 16 },\n};\n\nconst layout = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 16 },\n};\n\n\nconst range = (start, end) => {\n    const result = [];\n    for (let i = start; i < end; i++) {\n        result.push(i);\n    }\n    return result;\n};\n\nconst disabledDate = (current) => {\n    return current && current < moment().subtract(1, 'day');\n};\nconst disabledDateTime = () => {\n    return {\n        disabledHours: () => range(0, moment().add(1, 'hours').format('H')),\n    }\n};\n\nconst generateOrderID =  () => {\n    return '_' + Math.random().toString(36).substr(2, 9);\n};\n\nexport const validatePhoneNumber = (num) => rusPhoneNumberRegExp.test(num)\n\nconst SHOPPING_CART_VIEWS = {\n    ORDER_ITEMS_REVIEW: 'ORDER_ITEMS_REVIEW',\n    ORDER_INFO_FORM: 'ORDER_INFO_FORM',\n    ORDER_PLACED_SUCCESS: 'ORDER_PLACED_SUCCESS',\n    ORDER_PLACED_FAILURE: 'ORDER_PLACED_FAILURE'\n};\nconst Cart = ({resetCartToInitial, shoppingCartItems, addItemToCart, removeItemFromCart, orderPlacementReducer, placeOrder, resetOrderToInitial}) => {\n    const {loadingStatus, errorMessage} = orderPlacementReducer;\n    const [currentOrderView, setOrderView] = useState(SHOPPING_CART_VIEWS.ORDER_ITEMS_REVIEW)\n    const onFinish = (v) => {\n        const orderInfo = {\n            // key is hack for the history table,\n            key: generateOrderID(),\n            address: v.address,\n            deliveryTime: v.deliveryTime.toDate(),\n            clientName: v.clientName,\n            phoneNumber: v.phoneNumber,\n            orderItems: shoppingCartItems\n        };\n        placeOrder(orderInfo)\n    };\n    useEffect(() => {\n        return () => {\n            resetOrderToInitial()\n        }\n    }, []);\n    useEffect(() => {\n        if (loadingStatus === LOADING_STATUSES.SUCCESS) {\n            setOrderView(SHOPPING_CART_VIEWS.ORDER_PLACED_SUCCESS);\n            resetCartToInitial();\n        } else if (loadingStatus === LOADING_STATUSES.FAILURE) {\n            setOrderView(SHOPPING_CART_VIEWS.ORDER_PLACED_FAILURE)\n\n        }\n    }, [orderPlacementReducer]);\n\n    const shoppingCartEmpty = R.isEmpty(shoppingCartItems.items);\n    return <>\n        {currentOrderView === SHOPPING_CART_VIEWS.ORDER_ITEMS_REVIEW && <>\n            <Table\n                columns={columns(addItemToCart, removeItemFromCart)}\n                dataSource={shoppingCartItems.items}\n                expanablde\n                summary={() => (\n                    !shoppingCartEmpty && <>\n                        <Table.Summary.Row>\n                            <Table.Summary.Cell index={0}>Delivery</Table.Summary.Cell>\n                            <Table.Summary.Cell index={1}/>\n                            <Table.Summary.Cell index={2}/>\n                            <Table.Summary.Cell index={3}>{renderOptionalFreePrice(shoppingCartItems.deliveryPrice, USD_PRICE_FOR_FREE_DELIVERY)}</Table.Summary.Cell>\n                        </Table.Summary.Row>\n                        <Table.Summary.Row>\n                            <Table.Summary.Cell index={0}>Summary</Table.Summary.Cell>\n                            <Table.Summary.Cell index={1}/>\n                            <Table.Summary.Cell index={2}>{shoppingCartItems.totalQnty}</Table.Summary.Cell>\n                            <Table.Summary.Cell index={3}>{renderPrice(shoppingCartItems.totalPrice)}</Table.Summary.Cell>\n                        </Table.Summary.Row>\n                    </>\n                )}\n            />\n            {!shoppingCartEmpty && <Button type=\"primary\"\n                                           onClick={() => setOrderView(SHOPPING_CART_VIEWS.ORDER_INFO_FORM)}>Proceed to Order\n            </Button>\n            }\n        </>}\n        {currentOrderView === SHOPPING_CART_VIEWS.ORDER_INFO_FORM &&\n        <div style={{width: 500, margin: '0 auto'}}>\n            <Form\n                {...layout}\n                name=\"basic\"\n                onFinish={onFinish}\n            >\n                <Form.Item\n                    label=\"Name\"\n                    name=\"clientName\"\n                    rules={[{ required: true, message: 'Please input your name!' }]}\n                >\n                    <Input />\n                </Form.Item>\n                <Form.Item\n                    label=\"Address\"\n                    name=\"address\"\n                    rules={[{ required: true, message: 'Please input your address!' }]}\n                >\n                    <Input />\n                </Form.Item>\n                <Form.Item\n                    label=\"Phone Number\"\n                    name=\"phoneNumber\"\n                    rules={\n                        [\n                            { required: true, message: 'Please input your phone number!'},\n                            { validator:(_, value) => validatePhoneNumber(value) ? Promise.resolve() : Promise.reject('Phone number is invalid') }\n                        ]}\n                >\n                    <Input />\n                </Form.Item>\n\n                <Form.Item name=\"deliveryTime\" label=\"Select delivery time\"\n                   rules={\n                    [\n                        { type: 'object', required: true, message: 'Please select delivery time!' }\n                    ]}\n                >\n                    <DatePicker\n                        disabledDate={disabledDate}\n                        disabledTime={disabledDateTime}\n                        showTime format=\"YYYY-MM-DD HH:mm\"\n                    />\n                </Form.Item>\n                <Form.Item>\n                    <Button loading={loadingStatus === LOADING_STATUSES.LOADING} type=\"primary\" htmlType=\"submit\">\n                        Submit\n                    </Button>\n                </Form.Item>\n            </Form>\n        </div>\n        }\n        {currentOrderView === SHOPPING_CART_VIEWS.ORDER_PLACED_SUCCESS && <Result\n            status=\"success\"\n            title=\"Order has been successfully placed\"\n            extra={[\n                <Link to={'/'}>\n                    <Button type=\"primary\" key=\"console\">\n                        Go To Menu\n                    </Button>\n                </Link>\n            ]}\n        />}\n\n        {currentOrderView === SHOPPING_CART_VIEWS.ORDER_PLACED_FAILURE &&  <Result\n            status=\"error\"\n            title=\"Submission Failed\"\n            subTitle=\"Please check and modify the following information before resubmitting.\"\n            extra={[\n                <Button type=\"primary\" key=\"console\">\n                    Go To Menu\n                </Button>,\n                <Button onClick={() => setOrderView(SHOPPING_CART_VIEWS.ORDER_ITEMS_REVIEW)}>Try again</Button>,\n            ]}\n        >\n            <div className=\"desc\">\n                <Paragraph>\n                    <Text\n                        strong\n                        style={{\n                            fontSize: 16,\n                        }}\n                    >\n                        The order you submitted has the following error:\n                    </Text>\n                </Paragraph>\n                <Paragraph>\n                    <CloseCircleOutlined className=\"site-result-demo-error-icon\" /> {errorMessage.message}\n                </Paragraph>\n            </div>\n        </Result>}\n    </>\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        shoppingCartItems: state.shoppingCartReducer,\n        orderPlacementReducer: state.orderPlacementReducer,\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addItemToCart: (item) => dispatch(addItemToShoppingCart(item)),\n        removeItemFromCart: (item) => dispatch(removeItemFromShoppingCart(item)),\n        resetCartToInitial: () => dispatch(resetCartToInitial()),\n        placeOrder: (order) => dispatch(ordersPlacementAction.request(order)),\n        resetOrderToInitial: () => dispatch(ordersPlacementAction.initial())\n    }\n};\n\nexport const CartContainer = connect(mapStateToProps, mapDispatchToProps)(Cart);","import {actionWithoutPayload, createAsyncRequestTypes, action, resetToInitialAction, FAILURE, INITIAL, REQUEST, SUCCESS} from \"./utils\";\n\nexport const ORDERS_HISTORY_TYPES = createAsyncRequestTypes('ORDERS_HISTORY');\n\nexport const ordersHistoryAction = {\n    request: () => actionWithoutPayload(ORDERS_HISTORY_TYPES[REQUEST]),\n    success: (response) => action(ORDERS_HISTORY_TYPES[SUCCESS], response),\n    failure: (errorMessage) => action(ORDERS_HISTORY_TYPES[FAILURE], {errorMessage}),\n    initial: () => resetToInitialAction(ORDERS_HISTORY_TYPES[INITIAL]),\n};","import React, {useEffect} from 'react';\nimport {ordersHistoryAction} from \"../actions/orderHistoryActions\";\nimport {connect} from \"react-redux\";\nimport {Table} from \"antd\";\nimport {renderPrice} from \"../utils\";\nimport * as moment from \"moment\";\nimport {LOADING_STATUSES} from \"../api\";\n\nconst columns = [\n    { title: 'Order Time', dataIndex: 'deliveryTime', key: 'deliveryTime',  render: (text, record, index) => {\n            return moment(record.deliveryTime).format('YYYY-MM-DD')}\n    } ,\n    { title: 'Address', dataIndex: 'address', key: 'address' },\n    { title: 'Client name', dataIndex: 'clientName', key: 'clientName' },\n    { title: 'Price', dataIndex: 'totalPrice', key: 'totalPrice',  render: (text, record, index) => {\n            return renderPrice(record.orderItems.totalPrice)}\n    }\n];\n\nconst OrdersHistory = (props) => {\n    const {getOrdersHistory, data, loadingStatus} = props;\n    useEffect(() => {\n        getOrdersHistory();\n    }, []);\n\n    return(\n        <Table\n            columns={columns}\n            expandable={{\n                expandedRowRender: record => <ul style={{ margin: 0 }}>{\n                    record.orderItems.items.map(item => {\n                        return (\n                            <li key={item.id}>\n                                {item.name} - {item.qnty}\n                            </li>\n                        )\n                    })\n                }</ul>,\n            }}\n            dataSource={data}\n            loading={loadingStatus === LOADING_STATUSES.LOADING}\n        />\n    )\n};\n\nconst mapStateToProps = ({ordersHistoryReducer}) => {\n    const { loadingStatus, errorMessage, data } = ordersHistoryReducer\n    return {\n        loadingStatus,\n        errorMessage,\n        data\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n    getOrdersHistory: () => dispatch(ordersHistoryAction.request()),\n});\n\nexport const OrdersHistoryContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(OrdersHistory);","import {actionWithoutPayload, createAsyncRequestTypes, action, resetToInitialAction, FAILURE, INITIAL, REQUEST, SUCCESS} from \"./utils\";\n\nexport const MENU_TYPES = createAsyncRequestTypes('MENU');\n\nexport const menuAction = {\n    request: () => actionWithoutPayload(MENU_TYPES[REQUEST]),\n    success: (response) => action(MENU_TYPES[SUCCESS], response),\n    failure: (errorMessage) => action(MENU_TYPES[FAILURE], {errorMessage}),\n    initial: () => resetToInitialAction(MENU_TYPES[INITIAL]),\n};","import React from \"react\";\nimport {Result, Typography, Spin} from \"antd\";\nimport styles from './LoadingHandler.module.css';\nimport {LOADING_STATUSES} from \"../api\";\nimport CloseCircleOutlined from \"@ant-design/icons/lib/icons/CloseCircleOutlined\";\nconst { Paragraph, Text } = Typography;\n\nexport const LoadingHandler = ({children, errorMessage, loadingStatus, minHeight = 200}) => {\n    return <>\n        {\n            loadingStatus === LOADING_STATUSES.SUCCESS && children\n        }\n        {loadingStatus === LOADING_STATUSES.LOADING && <div style={{minHeight: minHeight}} className={styles.spinnerWrapper}>\n            <div className={styles.spinner}>\n                <Spin/>\n            </div>\n        </div>\n        }\n        {loadingStatus === LOADING_STATUSES.FAILURE && <Result\n            status=\"error\"\n            title=\"Loading Failed\"\n        >\n            <div className=\"desc\">\n                <Paragraph>\n                    <Text\n                        strong\n                        style={{\n                            fontSize: 16,\n                        }}\n                    >\n                        The following error happen:\n                    </Text>\n                </Paragraph>\n                <Paragraph>\n                    <CloseCircleOutlined className=\"site-result-demo-error-icon\" /> {errorMessage.message}\n                </Paragraph>\n            </div>\n        </Result>\n        }\n    </>\n};","import React, {useEffect} from 'react';\nimport {Card, Button} from 'antd';\nimport { Row, Col } from 'antd';\nimport {connect} from \"react-redux\";\nimport {addItemToShoppingCart, removeItemFromShoppingCart} from \"../reducers/shoppingCartReducer\";\nimport {renderPrice} from \"../utils\";\nimport {menuAction} from \"../actions/menuActions\";\nimport {LoadingHandler} from \"../UI/LoadingHandler\";\nconst { Meta } = Card;\n\nconst Menu = ({getMenu, data, addItemToCart, loadingStatus, errorMessage}) => {\n    useEffect(() => {\n        getMenu();\n    }, []);\n    return (\n        <LoadingHandler loadingStatus={loadingStatus} errorMessage={errorMessage} minHeight={400}>\n            <Row\n                gutter={[0,20]}\n               justify=\"space-around\"\n            >\n                {data.map(pizza => {\n                    return <Col key={pizza.id}\n                                xs={{ span: 4, offset: 1 }} lg={{ span: 4 }}\n                    >\n                        <Card hoverable\n                              style={{width: 240}}\n\n                              cover={<img alt={pizza.name} src={pizza.img}/>}>\n                            <Meta\n                                title={pizza.name}\n                            />\n\n                            {pizza.ingredients.join()}\n                            <p>\n                                {renderPrice(pizza.price)}\n                            </p>\n                            <Button type=\"primary\" onClick={() => addItemToCart(pizza)}>\n                                Add to the cart\n                            </Button>\n                        </Card>\n                    </Col>\n                })}\n            </Row>\n        </LoadingHandler>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    const {data, loadingStatus, errorMessage} = state.menuReducer\n\n    return {\n        shoppingCartItems: state.shoppingCartReducer,\n        data,\n        loadingStatus,\n        errorMessage\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addItemToCart: (item) => dispatch(addItemToShoppingCart(item)),\n        removeItemFromCart: (item) => dispatch(removeItemFromShoppingCart(item)),\n        getMenu: () => dispatch(menuAction.request()),\n    }\n};\n\nexport const MenuContainer = connect(mapStateToProps, mapDispatchToProps)(Menu);\n","import React from 'react';\nimport 'antd/dist/antd.css';\nimport {Badge, Result, Button} from 'antd';\n\nimport { Layout, Menu } from 'antd';\nimport ShoppingCartOutlined from \"@ant-design/icons/lib/icons/ShoppingCartOutlined\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {CartContainer} from \"./pages/cart\";\nimport {OrdersHistoryContainer} from \"./pages/ordersHistory\";\nimport {MenuContainer} from \"./pages/menu\";\nconst {Header} = Layout;\n\nfunction App({isAuth = true, addItemToCart, removeItemFromCart, shoppingCartItems}) {\n  return (\n      <Layout>\n          <Router>\n              <Header>\n                <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['1']}>\n                    <Menu.Item key=\"1\"><Link to=\"/\">Menu</Link></Menu.Item>\n                    <Menu.Item key=\"2\"><Link to=\"/ordershistory\">Orders history</Link></Menu.Item>\n                    <Menu.Item key=\"3\"><Link to=\"/cart\">\n                        <Badge count={shoppingCartItems.totalQnty}>\n                            <ShoppingCartOutlined />\n                        </Badge>\n                    </Link></Menu.Item>\n                </Menu>\n              </Header>\n              <Layout>\n                <Switch>\n                    <Route exact path=\"/\">\n                        <MenuContainer />\n                    </Route>\n                    <Route path=\"/cart\">\n                        <CartContainer />\n                    </Route>\n                    <Route path=\"/ordershistory\">\n                        <OrdersHistoryContainer />\n                    </Route>\n                    <Route path=\"*\">\n                        <Result\n                            status=\"404\"\n                            title=\"404\"\n                            subTitle=\"Sorry, the page you visited does not exist.\"\n                            extra={<Link to={'/'}>\n                                <Button type=\"primary\">Back Home</Button>\n                            </Link>}\n                        />\n                    </Route>\n                </Switch>\n              </Layout>\n          </Router>\n      </Layout>\n  );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        shoppingCartItems: state.shoppingCartReducer\n    }\n};\n\nexport const AppContainer = connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {LOADING_STATUSES} from \"../api\";\nimport {REQUEST, FAILURE, SUCCESS, INITIAL} from \"../actions/utils\";\n\n\nexport const createASyncReducer = (initialState, request) => {\n    return (state = initialState, action) => {\n        console.log('action' , action)\n        switch (action.type) {\n        case request[REQUEST]:\n        return {...state, loadingStatus: LOADING_STATUSES.LOADING};\n        case request[FAILURE]:\n        return {...state, ...action.payload, loadingStatus: LOADING_STATUSES.FAILURE};\n        case request[SUCCESS]:\n        return {...state, ...action.payload, loadingStatus: LOADING_STATUSES.SUCCESS};\n        case request[INITIAL]:\n        return initialState;\n        default:\n        return state\n    }}\n};","import {ORDERS_HISTORY_TYPES} from \"../actions/orderHistoryActions\";\nimport {createASyncReducer} from \"./utils\";\nimport {LOADING_STATUSES} from \"../api\";\n\nconst initialState = {\n    data: [],\n    loadingStatus: LOADING_STATUSES.INITIAL,\n    errorMessage: null\n};\n\nexport const ordersHistoryReducer = createASyncReducer(initialState, ORDERS_HISTORY_TYPES);\n","import {MENU_TYPES} from \"../actions/menuActions\";\nimport {createASyncReducer} from \"./utils\";\nimport {LOADING_STATUSES} from \"../api\";\n\nconst initialState = {\n    data: [],\n    loadingStatus: LOADING_STATUSES.INITIAL,\n    errorMessage: null\n};\n\nexport const menuReducer = createASyncReducer(initialState, MENU_TYPES);","// orderPlacementReducer.js\nimport {ORDER_PLACEMENT_TYPES} from \"../actions/orderPlacementActions\";\nimport {createASyncReducer} from \"./utils\";\nimport {LOADING_STATUSES} from \"../api\";\n\nconst initialState = {\n    data: [],\n    loadingStatus: LOADING_STATUSES.INITIAL,\n    errorMessage: null\n};\n\nexport const orderPlacementReducer = createASyncReducer(initialState, ORDER_PLACEMENT_TYPES);\n","import {combineReducers} from \"redux\";\nimport {shoppingCartReducer} from \"./shoppingCartReducer\";\nimport {ordersHistoryReducer} from \"./ordersHistoryReducer\";\nimport {menuReducer} from \"./menuReducer\";\nimport {orderPlacementReducer} from \"./orderPlacementReducer\";\n\nexport const rootReducer = combineReducers({\n    shoppingCartReducer,\n    ordersHistoryReducer,\n    menuReducer,\n    orderPlacementReducer\n});","import { api } from '../api';\nimport { call, put } from 'redux-saga/effects';\nimport { takeLatest, } from 'redux-saga/effects'\nimport {\n    ORDERS_HISTORY_TYPES,\n    ordersHistoryAction\n} from \"../actions/orderHistoryActions\";\nimport {REQUEST} from \"../actions/utils\";\nimport {getLCValueByKey, ORDER_HISTORY_LC_KEY, setLCValueByKey} from \"../utils\";\nimport {ORDER_PLACEMENT_TYPES, ordersPlacementAction} from \"../actions/orderPlacementActions\";\nimport {MENU_TYPES} from \"../actions/menuActions\";\n\nconst APIGetOrdersHistory = () => api.get(`/posts`);\nexport function* SAGAGetOrdersHistory () {\n    try {\n        const response = yield call(APIGetOrdersHistory);\n        // simulate success http-response\n        const orderHistory = getLCValueByKey(ORDER_HISTORY_LC_KEY);\n        yield put(ordersHistoryAction.success({data: orderHistory}))\n    } catch (e) {\n        yield put(ordersHistoryAction.failure(e))\n    }\n}\n\n\n\nconst APIOrderPlacement = (payload) => api.post(`/posts`, payload);\n\n//simulation of a remote DB\nconst setOrderToHistory = (order) => {\n    const prevHistoryString = getLCValueByKey(ORDER_HISTORY_LC_KEY);\n    const prevHistoryParsed = prevHistoryString || [];\n    const newHistory = [...prevHistoryParsed, order];\n    setLCValueByKey(newHistory, ORDER_HISTORY_LC_KEY);\n};\n\nexport function* SAGAOrderPlacement (params) {\n    const {payload} = params;\n    try {\n        const response = yield call(APIOrderPlacement, payload);\n        // simulate success http-response\n        yield put(ordersPlacementAction.success());\n        setOrderToHistory(payload)\n    } catch (e) {\n        yield put(ordersPlacementAction.failure(e))\n    }\n}\n\nexport function* actionWatcherOrders() {\n    yield takeLatest(ORDERS_HISTORY_TYPES[REQUEST], SAGAGetOrdersHistory);\n    yield takeLatest(ORDER_PLACEMENT_TYPES[REQUEST], SAGAOrderPlacement);\n}","import { api } from '../api';\nimport { call, put } from 'redux-saga/effects';\nimport { takeLatest, } from 'redux-saga/effects'\nimport {\n    MENU_TYPES,\n    menuAction\n} from \"../actions/menuActions\";\nimport {REQUEST} from \"../actions/utils\";\nimport pizzaImg from '../istockphoto-938742222-1024x1024.jpg';\n\nconst INGREDIENTS = ['pepper', 'salmon', 'bacon', 'tomato', 'mozzarella', 'fish', 'cheese', 'mayo', 'onion', 'mushrooms'];\nconst generateIngredients = () => {\n    const res = [];\n    for (let i = 0; i < 5; i++) {\n        res.push(INGREDIENTS[Math.floor(Math.random()*INGREDIENTS.length)])\n    }\n    return res\n}\n\n// const pizzaImg = 'https://media.istockphoto.com/photos/cheesy-pepperoni-pizza-picture-id938742222'\nconst pizzas = [\n    {\n        name: 'Pizza One',\n        ingredients: generateIngredients(),\n        img: pizzaImg,\n        price: {\n            usd: 5.5,\n            eur: 6.7\n        },\n        id: 1\n    },\n    {\n        name: 'Pizza Two',\n        ingredients: generateIngredients(),\n        img: pizzaImg,\n        price: {\n            usd: 2,\n            eur: 3\n        },\n        id: 2\n    },\n    {\n        name: 'Pizza Three',\n        ingredients: generateIngredients(),\n        img: pizzaImg,\n        price: {\n            usd: 6.5,\n            eur: 8\n        },\n        id: 3\n    },\n    {\n        name: 'Pizza Four',\n        ingredients: generateIngredients(),\n        img: pizzaImg,\n        price: {\n            usd: 10.5,\n            eur: 12\n        },\n        id: 4\n    },\n    {\n        name: 'Pizza Five',\n        ingredients: generateIngredients(),\n        img: pizzaImg,\n        price: {\n            usd: 14.5,\n            eur: 16\n        },\n        id: 5\n    },\n    {\n        name: 'Pizza Six',\n        ingredients: generateIngredients(),\n        img: pizzaImg,\n        price: {\n            usd: 1.5,\n            eur: 3\n        },\n        id: 6\n    },\n    {\n        name: 'Pizza Seven',\n        ingredients: generateIngredients(),\n        img: pizzaImg,\n        price: {\n            usd: 7,\n            eur: 9\n        },\n        id: 7\n    },\n    , {\n        name: 'Pizza Eight',\n        ingredients: generateIngredients(),\n        img: pizzaImg,\n        price: {\n            usd: 6,\n            eur: 7\n        },\n        id: 8\n    }\n];\n\nconst APIGetMenu = () => api.get(`/posts`);\nexport function* SAGAGetMenu () {\n    try {\n        const response = yield call(APIGetMenu);\n        // simulate success http-response\n        yield put(menuAction.success({data: pizzas}))\n    } catch (e) {\n        yield put(menuAction.failure(e))\n    }\n}\nexport function* actionWatcherMenu() {\n    yield takeLatest(MENU_TYPES[REQUEST], SAGAGetMenu)\n}","import { fork, all } from '@redux-saga/core/effects';\n// import { actionWatcherMessageSender } from './messageSender.saga';\n// import { actionWatcherMessageHistory } from './messageHistory.saga';\nimport {actionWatcherOrders} from \"./orders\";\nimport {actionWatcherMenu} from './menu'\n\nexport function* rootSaga() {\n    yield all([\n        fork(actionWatcherOrders),\n        fork(actionWatcherMenu)\n    ])\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {AppContainer} from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware, compose } from 'redux'\n\nimport { rootReducer } from './reducers/index'\n\n// const store = createStore(rootReducer)\n// import { createStore, applyMiddleware, compose } from 'redux'\n// import { rootReducer } from '../reducers';\nimport createSagaMiddleware from 'redux-saga';\nimport {rootSaga} from \"./sagas\";\n// import { rootSaga } from '../sagas/index';\nconst sagaMiddleware = createSagaMiddleware();\n// @ts-ignore\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport function configureStore() {\n    const store = createStore(rootReducer, composeEnhancer(applyMiddleware(sagaMiddleware)));\n    sagaMiddleware.run(rootSaga);\n    return store\n}\nconst store = configureStore()\nReactDOM.render(\n    <Provider store={store}>\n      <React.StrictMode>\n        <AppContainer />\n      </React.StrictMode>\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/istockphoto-938742222-1024x1024.07075419.jpg\";"],"sourceRoot":""}